.PHONY: run_app run_advanced_app

poetry: poetry.lock install update_version_file

poetry.lock: pyproject.toml
	(poetry lock)

install: poetry.lock
	(poetry install)

run_app: poetry
	poetry run streamlit run app.py --global.disableWidgetStateDuplicationWarning=True

run_advanced_app: poetry
	poetry run streamlit run app.py -- --app_version advanced_app

build_stlite: poetry
	python -m build
	cp dist/metapop-0.4.0-*-none-any.whl stlite
	cp stlite/*.whl .
	cp stlite/launch_stlite.py .
	zip -r stlite/metapop_stlite.zip launch_stlite.py *.whl scripts/app
	rm *.whl
	rm launch_stlite.py
	python3 stlite/make_measles_sim_html.py

requirements:
	rm -f requirements.txt
	poetry run pip freeze > tmp_requirements.txt
	grep -v "metapop" tmp_requirements.txt > requirements.txt
	metapop_version=$$(poetry version -s); \
	echo "metapop==$$metapop_version" >> requirements.txt
	rm tmp_requirements.txt

manifest:
	rm -f manifest.json
	poetry run rsconnect write-manifest streamlit . --overwrite --exclude Makefile --exclude README.md

update_version_file:
	rm -f metapop/version.py
	echo "# This file is automatically generated by the Makefile." > ./metapop/version.py
	echo "# Do not edit this file directly." >> metapop/version.py
	echo "# This file contains the version information for the metapop package." >> metapop/version.py
	echo "__all__ = [\"__version__\", \"__versiondate__\", \"__git_commit__\"]\n" >> metapop/version.py
	echo "__version__ = \"$$(poetry version -s)\"" >> metapop/version.py
	echo "__versiondate__ = \"$$(date +"%Y-%m-%d")\"" >> metapop/version.py
	echo "__git_commit__ = \"$$(git rev-parse main)\"  # pragma: allowlist secret" >> metapop/version.py

release: poetry requirements manifest

test: poetry
	poetry run pytest -v
